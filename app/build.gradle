plugins {
    id("com.android.application")
    id("com.github.triplet.play") version "2.4.2"
}

def isCi = "true" == System.getenv("CI")
def preDexEnabled = "true" == System.getProperty("pre-dex", "true")


if (project.file('../PiwigoSigning.properties').exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(file('../PiwigoSigning.properties')))

    android {
        signingConfigs {
            release {
                storeFile file("../piwigo_android_keystore.jks")
                storePassword props['keystore.password']
                keyAlias 'publishing'
                keyPassword props['key.password']
            }
            localRelease {
                storeFile file("${System.properties['user.home']}${File.separator}/.android_keystore_default")
                storePassword props['keystore_default.password']
                keyAlias 'defaultRelease'
                keyPassword props['key_default.password']
            }

        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
            localRelease {
                signingConfig signingConfigs.localRelease
            }
        }
    }
    play {
        defaultToAppBundles = true
        track = 'beta'
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "org.piwigo.android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 103
        versionName "1.0.3-dev"
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    dexOptions {
        preDexLibraries = preDexEnabled && !isCi

    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    /* Triple-T GPP is applied as plugin in all cases, so we need to configure it always */
    play {
        serviceAccountCredentials = file("../upload_key.json")
    }
}

def daggerVersion = '2.27'
def okhttpVersion = '4.4.1'
def retrofitVersion = '2.8.1'
def picassoVersion = '2.71828'
def assertjVersion = '1.2.0'
def acraVersion = '5.5.0'
def room_version = "2.2.5"
def espressoVersion = '3.3.0-alpha05'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'

    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    implementation "com.squareup.picasso:picasso:${picassoVersion}"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'com.google.guava:guava:28.1-jre'
    annotationProcessor 'com.google.guava:guava:24.1-jre'

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"


    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.vipulasri:ticketview:1.0.7'
    implementation "androidx.preference:preference:1.1.0"
    
    implementation "ch.acra:acra-mail:$acraVersion"
    implementation "ch.acra:acra-dialog:$acraVersion"

    implementation 'com.github.jorgecastilloprz:fabprogresscircle:1.01@aar'
    implementation "com.leinardi.android:speed-dial:3.0.0"
    implementation 'com.github.tingyik90:snackprogressbar:6.1.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    /* Don't forget to add to string libraries if you add a library here. */

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation("com.squareup.assertj:assertj-android:${assertjVersion}") {
        exclude group: 'com.android.support'
    }
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'com.google.guava:guava:24.1-jre'
    testImplementation 'androidx.appcompat:appcompat:1.1.0'
    testAnnotationProcessor 'com.google.guava:guava:24.1-jre'
    testImplementation 'com.google.code.findbugs:jsr305:3.0.2'

    androidTestImplementation 'androidx.test:core:1.3.0-alpha05'
    androidTestImplementation 'androidx.test:core-ktx:1.3.0-alpha05'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2-alpha05'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha05'
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestImplementation 'androidx.test:rules:1.3.0-alpha05'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    // Note that espresso-idling-resource is used in the code under test.
    implementation "androidx.test.espresso:espresso-idling-resource:${espressoVersion}"

}
